generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id             String         @id @default(uuid())
  roomId         String         @unique
  currentRound   Int            @default(1)
  maxRounds      Int            @default(5)
  currentWord    String
  exclusionWords String[]       @default([])
  phase          GamePhase      @default(LOBBY)
  roundStartTime DateTime?
  gameMode       GameMode       @default(PROMPT_ANYTHING)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  hostId         String?
  images         Image[]
  votes          Vote[]
  promptChains   PromptChain[]
  playerGames    PlayerGame[]
}

model Player {
  id            String         @id
  name          String
  email         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  images        Image[]
  votes         Vote[]
  promptChains  PromptChain[]
  playerGames   PlayerGame[]
}

model PlayerGame {
  id        String   @id @default(uuid())
  playerId  String
  gameId    String
  isHost    Boolean  @default(false)
  score     Int      @default(0)
  player    Player   @relation(fields: [playerId], references: [id])
  game      Game     @relation(fields: [gameId], references: [id])

  @@unique([playerId, gameId])
}

model Image {
  id        String   @id @default(uuid())
  url       String
  prompt    String
  gameId    String
  playerId  String
  createdAt DateTime @default(now())
  game      Game     @relation(fields: [gameId], references: [id])
  player    Player   @relation(fields: [playerId], references: [id])
  votes     Vote[]
}

model Vote {
  id        String   @id @default(uuid())
  gameId    String
  imageId   String
  voterId   String
  createdAt DateTime @default(now())
  game      Game     @relation(fields: [gameId], references: [id])
  image     Image    @relation(fields: [imageId], references: [id])
  voter     Player   @relation(fields: [voterId], references: [id])

  @@unique([gameId, voterId])
}

model PromptChain {
  id            String   @id @default(uuid())
  gameId        String
  playerId      String
  originalWord  String
  chain         Json     // Array of { playerId, prompt, imageUrl }
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  game          Game     @relation(fields: [gameId], references: [id])
  player        Player   @relation(fields: [playerId], references: [id])
}

enum GamePhase {
  LOBBY
  PROMPT
  VOTING
  RESULTS
  ENDED
}

enum GameMode {
  PROMPT_ANYTHING
  PROMPTOPHONE
}
