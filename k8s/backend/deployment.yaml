apiVersion: apps/v1
kind: Deployment
metadata:
  name: promptionary-backend
  labels:
    app: promptionary
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: promptionary
      component: backend
  template:
    metadata:
      labels:
        app: promptionary
        component: backend
    spec:
      containers:
      - name: backend
        image: gcr.io/PROJECT_ID/promptionary-backend:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: promptionary-backend-secret
              key: database-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: promptionary-backend-secret
              key: openai-api-key
        - name: INSTANCE_CONNECTION_NAME
          valueFrom:
            secretKeyRef:
              name: promptionary-backend-secret
              key: instance-connection-name
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.1
        command:
        - "/cloud-sql-proxy"
        - "$(INSTANCE_CONNECTION_NAME)"
        - "--credentials-file=/secrets/cloudsql/key.json"
        - "--auto-iam-authn"
        env:
        - name: INSTANCE_CONNECTION_NAME
          valueFrom:
            secretKeyRef:
              name: promptionary-backend-secret
              key: instance-connection-name
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials